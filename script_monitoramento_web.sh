#!/bin/bash

# Defini√ß√£o de vari√°veis principais
URL="http://localhost"  # URL do servidor a ser monitorado
LOG_DIR="/var/log/monitoramento_nginx"  # Diret√≥rio para armazenar os logs
LOG_FILE="$LOG_DIR/status.log"  # Arquivo de log onde os eventos ser√£o registrados
SERVICE="nginx"  # Nome do servi√ßo a ser monitorado
DISCORD_WH="DIGITE_AQUI_LINK_WEBHOOK"  # Webhook do Discord para alertas
CONT=0  # Vari√°vel de controle para evitar notifica√ß√µes repetidas

# Defini√ß√£o das mensagens enviadas ao Discord
MSG_OFFLINE="üö® Alerta! O servidor est√° offline! üî¥"
MSG_ONLINE="‚úÖ Servidor voltou ao ar! üü¢"
MSG_RESET="üîÑ Reiniciando servidor ..."

# Configura√ß√£o do fuso hor√°rio para S√£o Paulo
sudo timedatectl set-timezone America/Sao_Paulo

# Fun√ß√£o para enviar mensagens ao Discord
send_discord_message() {
    local MENSAGEM="$1"
    
    # Envia a mensagem via webhook do Discord
    curl -s -o /dev/null -X POST -H "Content-Type: application/json" \
         -d "{\"content\": \"$MENSAGEM\"}" \
         "$DISCORD_WH"
}

# Garante que o diret√≥rio de logs exista
sudo mkdir -p "$LOG_DIR"
sudo mkdir -p "$LOG_FILE"
sudo chmod +x "$LOG_FILE"


# Loop infinito para monitoramento cont√≠nuo
while true; do
    # Faz uma requisi√ß√£o ao servidor e captura o c√≥digo de resposta HTTP
    HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$URL")

    # Obt√©m a data e hora atuais para registro no log
    TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

    # Verifica se o site est√° online
    if [ "$HTTP_CODE" -eq 200 ]; then
        echo "$TIMESTAMP - OK - Site est√° dispon√≠vel" >> "$LOG_FILE"
        
        # Se for a primeira vez que o site est√° online desde o in√≠cio do script, envia uma notifica√ß√£o
        if [ "$CONT" -eq 0 ]; then
            send_discord_message "üü¢ Servidor Online"
            ((CONT++))
        fi
    else
        echo "$TIMESTAMP - ERRO - Site indispon√≠vel (C√≥digo do erro: $HTTP_CODE)" >> "$LOG_FILE"
        send_discord_message "$MSG_OFFLINE"

        # Loop para tentar reiniciar o servi√ßo at√© que ele esteja ativo novamente
        while ! systemctl is-active --quiet "$SERVICE"; do
            TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

            # Tenta reiniciar o servi√ßo
            sudo systemctl restart "$SERVICE"
            echo "$TIMESTAMP - Reiniciando o servi√ßo $SERVICE" >> "$LOG_FILE"
            send_discord_message "$MSG_RESET"

            # Aguarda 5 segundos antes de verificar novamente se o servi√ßo foi reiniciado
            sleep 5

            # Verifica se o servi√ßo foi reiniciado com sucesso
            if systemctl is-active --quiet "$SERVICE"; then
                echo "$TIMESTAMP - Servi√ßo $SERVICE reiniciado com sucesso" >> "$LOG_FILE"
                send_discord_message "$MSG_ONLINE"
            else
                echo "$TIMESTAMP - Falha ao reiniciar o servi√ßo $SERVICE" >> "$LOG_FILE"
            fi
        done
    fi

    # Aguarda 60 segundos antes da pr√≥xima verifica√ß√£o
    sleep 60
done